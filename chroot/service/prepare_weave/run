#!/bin/sh
if grep -q 'heddle_prepare=1' /proc/cmdline; then
  if [ -c /dev/ttyAMA0 ]; then
    exec > /dev/ttyAMA0 2>&1
  else
    exec > /dev/ttyS0 2>&1
  fi
else
  exec 2>&1
  # we always have to run because updates don't use heddle_prepare=1
fi
set -e

# start docker
sv start docker

# check docker is ready
docker info
docker history scratch

# check if weave images exist
if docker history "weaveworks/weave:$VER_WEAVE" && \
   docker history "weaveworks/weaveexec:$VER_WEAVE" && \
   docker history "weaveworks/plugin:$VER_WEAVE" && \
   docker history "alpine:latest-$VER_ALPINE"; then
  echo weave images exist
  exec sv down prepare_weave
fi

# remove any existing :latest tags
docker rmi weaveworks/weave:latest || true
docker rmi weaveworks/weaveexec:latest || true
docker rmi weaveworks/plugin:latest || true
docker rmi alpine:latest || true

# import alpine image
cd "$GOPATH/src/github.com/weaveworks/weave"
docker load -i "alpine:latest-$VER_ALPINE.tar.gz"
docker tag "alpine:latest-$VER_ALPINE" alpine:latest

# make weave images
rm -f .{weaver,weaveexec,dockerplugin}.uptodate
make SUDO= BUILD_IN_CONTAINER=false "WEAVEEXEC_DOCKER_VERSION=$VER_DOCKER"

# weave tags its images :latest so tag them back
docker tag weaveworks/weave:latest "weaveworks/weave:$VER_WEAVE"
docker tag weaveworks/weaveexec:latest "weaveworks/weaveexec:$VER_WEAVE"
docker tag weaveworks/plugin:latest "weaveworks/plugin:$VER_WEAVE"
# and remove :latest tags
docker rmi weaveworks/weave:latest
docker rmi weaveworks/weaveexec:latest
docker rmi weaveworks/plugin:latest
docker rmi alpine:latest

# we'll be restarted and check for the images again
